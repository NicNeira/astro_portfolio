---
import Hero from "@components/Hero.astro";
import Content from "@components/Content.astro";
import Steps from "@components/Steps.astro";
import Skill from "@components/Skill.astro";
import CallToAction from "@components/CallToAction.astro";
import Layout from "@layouts/PageLayout.astro";

import ProfilePhoto from "../../assets/images/profile.jpg";
import AboutPhoto from "../../assets/images/about.jpg";

import { getContentProjects, getExtraWorksImages } from "@utils/projectsData";
import { useTranslations } from "@utils/i18n";

const lang = "de";
const t = useTranslations(lang);

const profileName = t("hero.name");
const subTitle = t("hero.subtitle");

const metadata = {
  title: t("site.title"),
  description: t("site.description"),
  canonical: "https://maximiliano-neira.com/de/",
};

const ContentProjects = getContentProjects(t, lang);
const portfolioSectionTitle = t("portfolio.title");
const portfolioSectionSubtitle = t("portfolio.subtitle");

const extraWorksImages = getExtraWorksImages();
const otherWorksTitle = t("other-works.title");
const otherWorksSubtitle = t("other-works.subtitle");
---

<Layout metadata={metadata}>
  <Hero
    id="hero"
    title={profileName}
    subtitle={subTitle}
    image={{
      src: ProfilePhoto,
      alt: "PortrÃ¤t von Maximiliano Neira, Art Director und Filmemacher",
      width: 400,
      height: 400,
    }}
  >
    <Fragment slot="paragraph">
      {t("hero.description")}
    </Fragment>

    <Fragment slot="actions">
      <div
        class="flex justify-center w-full intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
      >
        <a
          href={`https://maxistorage.blob.core.windows.net/assets/cv/CV-${lang.toUpperCase()}.pdf`}
          download={`CV-Maximiliano-Neira-${lang.toUpperCase()}.pdf`}
          target="_blank"
          class="inline-flex items-center justify-center px-2 py-1 text-sm font-medium text-white bg-blue-600 hover:bg-blue-800 rounded-lg shadow-lg transition-colors duration-200"
        >
          <svg
            class="w-4 h-4 mr-2"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
            ></path>
          </svg>
          {t("hero.download-cv")}
        </a>
      </div>
    </Fragment>
  </Hero>

  <Content
    id="about"
    columns={3}
    video={{
      src: "https://maxistorage.blob.core.windows.net/assets/reel.mp4",
      alt: "About Me Video",
    }}
  >
    <Fragment slot="content">
      <h1
        class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200 intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
        set:html={t("about.title")}
      />
      <p>
        {t("about.description")}
      </p>
      <p class="mt-2">
        {t("about.description-2")}
      </p>
    </Fragment>
  </Content>

  <Steps
    id="resume"
    title={t("experience.title")}
    items={[
      {
        title: `${t("experience.student.title")} <br /> <span class="font-normal">${t("experience.student.company")}</span> <br /> <span class="text-sm font-normal">${t("experience.student.period")}</span>`,
        description: `${t("experience.student.description")} <br /> <a href="https://www.arcos.cl/carreras/cine/" target="_blank" class="text-primary hover:underline">arcos.cl</a>`,
        icon: "tabler:school",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: `${t("experience.casa-hojas.title")} <br /> <span class="font-normal">${t("experience.casa-hojas.project")}</span> <br /> <span class="text-sm font-normal">${t("experience.casa-hojas.period")}</span>`,
        description: t("experience.casa-hojas.description"),
        icon: "tabler:palette",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: `${t("experience.ciudad-latente.title")} <br /> <span class="font-normal">${t("experience.ciudad-latente.project")}</span> <br /> <span class="text-sm font-normal">${t("experience.ciudad-latente.period")}</span>`,
        description: t("experience.ciudad-latente.description"),
        icon: "tabler:building-estate",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: `${t("experience.inhumano.title")} <br /> <span class="font-normal">${t("experience.inhumano.project")}</span> <br /> <span class="text-sm font-normal">${t("experience.inhumano.period")}</span>`,
        description: t("experience.inhumano.description"),
        icon: "tabler:movie",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: `${t("experience.retrato-oval.title")} <br /> <span class="font-normal">${t("experience.retrato-oval.project")}</span> <br /> <span class="text-sm font-normal">${t("experience.retrato-oval.period")}</span>`,
        description: t("experience.retrato-oval.description"),
        icon: "tabler:brush",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
    ]}
    classes={{ container: "max-w-3xl" }}
  />

  <!-- Skills -->
  <Skill
    id="skills"
    title={t("skills.title")}
    subtitle={t("skills.subtitle")}
    columns={3}
    defaultIcon="tabler:point-filled"
    items={[
      {
        title: t("skills.art-direction.title"),
        description: t("skills.art-direction.description"),
        icon: "tabler:palette",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: t("skills.model-design.title"),
        description: t("skills.model-design.description"),
        icon: "tabler:3d-cube-sphere",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: t("skills.cinematography.title"),
        description: t("skills.cinematography.description"),
        icon: "tabler:camera",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: t("skills.services.title"),
        description: t("skills.services.description"),
        icon: "tabler:list-check",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
      {
        title: t("skills.languages.title"),
        description: t("skills.languages.description"),
        icon: "tabler:language",
        classes: {
          title: "dark:text-white",
          description: "dark:text-gray-400",
        },
      },
    ]}
  />

  <!-- Projects -->
  {
    ContentProjects.map((project, index) => (
      <Content
        id={index === 0 ? "porfolio" : undefined}
        title={index === 0 ? portfolioSectionTitle : undefined}
        subtitle={index === 0 ? portfolioSectionSubtitle : undefined}
        isReversed={true}
        isAfterContent={index !== 0}
        items={[
          {
            title: t("general.description"),
            description: project.description,
          },
        ]}
        image={project.image}
        callToAction={{
          text: t("general.view-project"),
          icon: "tabler:chevron-right",
          href: project.href,
        }}
      >
        {" "}
        <Fragment slot="content">
          <h3
            class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2"
            set:html={project.projectTitleHTML}
            transition:name={`title-${project.id}`}
            transition:animate="fade"
          />
          <div transition:name={`description-${project.id}`} class="hidden" />
        </Fragment>
        <Fragment slot="bg">
          <div class="absolute inset-0 bg-blue-50 dark:bg-transparent" />
        </Fragment>
      </Content>
    ))
  }

  <!-- Other Works Section *********** -->
  <section class="py-16">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2
          class="text-3xl md:text-4xl font-bold tracking-tight dark:text-white mb-4"
        >
          {otherWorksTitle}
        </h2>
        <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
          {otherWorksSubtitle}
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {
          extraWorksImages.map((image, index) => (
            <div
              class="aspect-video overflow-hidden rounded-lg shadow-lg cursor-pointer gallery-image hover:scale-105 transition-transform duration-300"
              data-index={index}
            >
              <img
                src={image.src}
                alt={image.alt}
                width={image.width || 1920}
                height={image.height || 1080}
                class="w-full h-full object-cover"
                loading="lazy"
              />
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <!-- CallToAction Widget *********** -->
  <CallToAction
    title={t("cta.title")}
    subtitle={t("cta.subtitle")}
    actions={[
      {
        variant: "primary",
        text: t("cta.button"),
        href: "/de/contact",
      },
    ]}
  />
</Layout>
