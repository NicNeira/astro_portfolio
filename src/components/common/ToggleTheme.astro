---
import { Icon } from "astro-icon/components";
export interface Props {
  iconClass?: string;
}
---

<button
  type="button"
  class:list={[
    "theme-toggle-button",
    "text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5",
  ]}
  aria-label="Toggle theme"
>
  <Icon name="tabler:sun" class="w-5 h-5 dark:hidden" />
  <Icon name="tabler:moon" class="w-5 h-5 hidden dark:inline-block" />
</button>

<script is:inline>
  // Función para aplicar el tema
  function applyTheme(theme) {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
      localStorage.setItem("theme", "dark");
    } else {
      document.documentElement.classList.remove("dark");
      localStorage.setItem("theme", "light");
    }
  }

  // Función para inicializar el toggle theme
  function initThemeToggle() {
    const themeToggleButtons = document.querySelectorAll(
      ".theme-toggle-button"
    );

    themeToggleButtons.forEach((button) => {
      // Remover listeners existentes para evitar duplicados
      button.removeEventListener("click", handleThemeToggle);
      // Agregar el listener
      button.addEventListener("click", handleThemeToggle);
    });
  }

  // Handler para el toggle
  function handleThemeToggle() {
    const currentTheme = localStorage.getItem("theme");
    if (currentTheme === "dark") {
      applyTheme("light");
    } else {
      applyTheme("dark");
    }
  }

  // Inicializar al cargar la página
  document.addEventListener("DOMContentLoaded", initThemeToggle);

  // Reinicializar después de navegaciones de Astro
  document.addEventListener("astro:page-load", initThemeToggle);
</script>
